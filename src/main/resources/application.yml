management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            "configprops",
            "env",
            "health",
            "info",
            "logfile",
            "loggers",
            "prometheus",
            "threaddump",
          ]

spring:
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
  profiles:
    active: ${spring.profiles.active}
  security:
    oauth2:
      client:
        registration:
          oidc:
            client-id: ${spring.sec.oauth2.client.id}
        provider:
          oidc:
            issuer-uri: ${keyckloak.url}
      resourceserver:
        jwt:
          issuer-uri: ${keyckloak.url}
        multitenant:
          enabled: true
          resolve-mode: jwt
          jwt:
            authorities-converter: com.fininfo.sae.saeopcc.security.jwt.config.JwtGrantedAuthorityConverter
      audience: account

  jpa:
    database-plateform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    open-in-view: false
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
      hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
      hibernate.cache.use_minimal_puts: true
      hibernate.cache.hazelcast.instance_name: ${app.name:SAEOPCC}
      hibernate.cache.hazelcast.use_lite_member: true

  cloud:
    config:
      enabled: false

  application:
    name: ${app.name:SAEOPCC}

  data:
    jpa:
      repositories:
        bootstrap-mode: deferred

server:
  port: 8078
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

kafka:
  bootstrap-servers: ${kafka.url}
  retry-max-num: 4
  back-off-period: 4000
  max-poll-records: ${max.poll.records}
  session-time-out: ${session.time.out}
  max-poll-intervalms: ${max.poll.interval.ms}
  schema-registry-url: ${schema.registry.url}
  security-protocol: SASL_SSL
  sasl-mechanism: SCRAM-SHA-256
  sasl-jaas-config: ${kafka.sasl.jaas.config}
  ssl-truststore-location: ${kafka.ssl.truststore.location}
  ssl-truststore-password: ${kafka.ssl.truststore.password}
  ssl-endpoint-identification-algorithm: ${kafka.ssl.endpoint.identification.algorithm}

  consumer:
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    group.id: ${kafka.group.id}
    auto.offset.reset: ${kafka.auto.offset.reset}

  producer:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer

multitenancy:
  tenant:
    entityManager:
      packages: com.fininfo.saeopcc
    repository:
      packages: com.fininfo.saeopcc.multitenancy.repositories
    liquibase:
      changeLog: classpath:db/changelog/db.changelog-tenant.yaml
  shared:
    entityManager:
      packages: com.fininfo.saeopcc.shared.domains
    repository:
      packages: com.fininfo.saeopcc.shared.repositories
    liquibase:
      enabled: false