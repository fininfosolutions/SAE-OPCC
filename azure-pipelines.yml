# specific path build
trigger:
  - SAE-Registred
    

jobs:
  - job: Build_SAE_Opcc
    pool: 'BUILD-SERVER'
#      name: Default
#      demands:
    variables:
      java_version: '17'
      jdkVersion: '17'
      SPRING_OUTPUT_ANSI_ENABLED: NEVER
      SPRING_JPA_SHOW_SQL: false
      artifactName: ''
  

    steps:
      - script: | 
          echo "Version du JDK :" 
          java -version : 
        displayName: 'Afficher la version du JDK'
      - script: | 
          echo "Version du MVN :" 
          mvn --version : 
        displayName: 'Afficher la version du MVN'


      #----------------------------------------------------------------------
      # ADD Permission
      #----------------------------------------------------------------------
      - script: chmod 777 $(system.defaultworkingdirectory)/mvnw
        displayName: 'ADD Permission'


      #----------------------------------------------------------------------
      # Apply Spotless
      #----------------------------------------------------------------------
      - script: mvn spotless:apply
        displayName: 'Apply Spotless'
      

      # Analyse SonarQube
      - script: |
          /opt/maven/bin/mvn -f /home/***/myagent1/_work/100/s/pom.xml \
          -Dsonar.projectKey=SAE-Opcc \
          -Dsonar.host.url=http://sonarqube.fininfosolutions.com \
          -Dsonar.login=squ_bec4f98e1b0565dbe30c5149ebd475055b1d74b7 \
          clean package sonar:sonar
        displayName: 'SonarQube Analysis'

#      # Vérification des bugs dans SonarQube
      - script: |
          SONAR_PROJECT_KEY="SAE-Opcc"
          SONAR_HOST_URL="http://sonarqube.fininfosolutions.com"
          SONAR_AUTH_TOKEN="squ_bec4f98e1b0565dbe30c5149ebd475055b1d74b7"

          BUG_COUNT=$(curl -s "$SONAR_HOST_URL/api/issues/search?componentKeys=$SONAR_PROJECT_KEY&types=BUG" \
          -u $SONAR_AUTH_TOKEN: | grep -o '"total":[0-9]*' | awk -F: '{print $2}' | head -1 | tr -d '\n')

          echo "Nombre de bugs trouvés : $BUG_COUNT"

      #----------------------------------------------------------------------
      # Test Packaging
      #----------------------------------------------------------------------
      - script: ./mvnw -DskipTests clean verify
        displayName: 'TESTS: packaging'
       


     # - script: |
     #     echo "Liste des fichiers dans le répertoire target"
     #     ls target/
     #   displayName: 'Vérifier les fichiers dans le répertoire target'

      #- script: |
      #    docker build -f ./dockerfile -t 192.168.30.15:1200/sae-opcc:$(Build.BuildNumber) .
      #  displayName: 'Build Docker Image from Dockerfile'
      #----------------------------------------------------------------------
      # Build Docker Image
      #----------------------------------------------------------------------
      - script: ./mvnw package -Pprod -DskipTests jib:dockerBuild
        displayName: 'Build Docker Image'
      - script: |
          docker tag sae-opcc:latest sae-opcc:$(Build.BuildNumber)
          cd /home/administrateur/myagent1/_work/8/s
          echo "TAG6="$(Build.BuildNumber) >> .env
        displayName: 'Docker TAG Image'

      

#----------------------------------------------------------------------
# Connect to Nexus
#----------------------------------------------------------------------
      - script: docker login -u admin -p It@*2021 http://192.168.30.15:1200
        displayName: 'Connect to Nexus'

#----------------------------------------------------------------------
# Push image to nexus
#----------------------------------------------------------------------
      - script: docker tag sae-opcc:latest 192.168.30.15:1200/sae-opcc:$(Build.BuildNumber)
        displayName: 'docker tag image to nexus'
      - script: docker push 192.168.30.15:1200/sae-opcc:$(Build.BuildNumber)
        displayName: 'docker push image to nexus'

#----------------------------------------------------------------------
# Connect to Kubernetes Server.
#----------------------------------------------------------------------
      - task: SSH@0
        inputs:
          sshEndpoint: 'Kub-ssh'
          runOptions: 'inline'
          inline: |
            export KUBECONFIG=/etc/kubernetes/admin.conf
            kubectl set image deployment/sae-opcc -n fa-dev sae-opcc-app=192.168.30.15:1200/sae-opcc:$(Build.BuildNumber)

        